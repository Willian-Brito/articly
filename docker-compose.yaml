services:
  server:
    build:
      context: .
      dockerfile: ./app/server/Presentation/Api/Dockerfile
    ports:
      - "5066:5066"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__Postgres=Host=postgres;Database=ArticlyDB;Username=postgres;Password=postgres;CommandTimeout=500
      - MongoDBSettings__ConnectionString=mongodb://mongo:27017
      - MongoDBSettings__DatabaseName=ArticlyStatsDB
    depends_on:
      postgres:
        condition: service_healthy
      mongo:
        condition: service_healthy
    container_name: articly-server
    # networks:
    #   - default

  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ArticlyDB
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    container_name: articly-postgres
    # networks:
    #   - default

  mongo:
    image: mongo:6
    ports:
      - "27017:27017"
    volumes:
      - mongodata:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 5s
      retries: 5
    container_name: articly-mongo
    networks:
      - default

  client:
    build: 
      context: .
      dockerfile: ./app/client/Dockerfile
    container_name: articly-client
    ports:
      - "8081:80"
    # networks:
    #   - default
  
# networks:
#   default:    
#     external: true
#     name: aiko-network

volumes:
  pgdata:
  mongodata: